name: KokoSOS
options:
  bundleIdPrefix: com.kokosos
  deploymentTarget:
    iOS: '15.0'
  developmentLanguage: ja
packages:
  Supabase:
    url: https://github.com/supabase-community/supabase-swift
    from: 2.2.0
  Firebase:
    url: https://github.com/firebase/firebase-ios-sdk
    from: 10.15.0
configs:
  Debug-Dev: debug
  Debug-Stage: debug
  Debug-Prod: debug
  Release-Dev: release
  Release-Stage: release
  Release-Prod: release
settings:
  base:
    PRODUCT_NAME: KokoSOS
    PRODUCT_BUNDLE_IDENTIFIER: $(APP_BUNDLE_ID)
    TARGETED_DEVICE_FAMILY: 1
    CURRENT_PROJECT_VERSION: 1
    MARKETING_VERSION: 0.1.0
    SWIFT_VERSION: 5.0
    ASSETCATALOG_COMPILER_APPICON_NAME: AppIcon
  configs:
    Debug-Dev:
      GCC_PREPROCESSOR_DEFINITIONS: DEBUG=1
      INFOPLIST_FILE: Resources/Info-Dev.plist
      GCC_OPTIMIZATION_LEVEL: 0
      SWIFT_ACTIVE_COMPILATION_CONDITIONS: DEBUG DEV
      BASE_CONFIGURATION: Configs/Dev.xcconfig
    Debug-Stage:
      GCC_PREPROCESSOR_DEFINITIONS: DEBUG=1
      INFOPLIST_FILE: Resources/Info-Stage.plist
      GCC_OPTIMIZATION_LEVEL: 0
      SWIFT_ACTIVE_COMPILATION_CONDITIONS: DEBUG STAGE
      BASE_CONFIGURATION: Configs/Stage.xcconfig
    Debug-Prod:
      GCC_PREPROCESSOR_DEFINITIONS: DEBUG=1
      INFOPLIST_FILE: Resources/Info-Prod.plist
      GCC_OPTIMIZATION_LEVEL: 0
      SWIFT_ACTIVE_COMPILATION_CONDITIONS: DEBUG PROD
      BASE_CONFIGURATION: Configs/Prod.xcconfig
    Release-Dev:
      INFOPLIST_FILE: Resources/Info-Dev.plist
      SWIFT_ACTIVE_COMPILATION_CONDITIONS: DEV
      SWIFT_OPTIMIZATION_LEVEL: '-O'
      BASE_CONFIGURATION: Configs/Dev.xcconfig
    Release-Stage:
      INFOPLIST_FILE: Resources/Info-Stage.plist
      SWIFT_ACTIVE_COMPILATION_CONDITIONS: STAGE
      SWIFT_OPTIMIZATION_LEVEL: '-O'
      BASE_CONFIGURATION: Configs/Stage.xcconfig
    Release-Prod:
      INFOPLIST_FILE: Resources/Info-Prod.plist
      SWIFT_ACTIVE_COMPILATION_CONDITIONS: PROD
      SWIFT_OPTIMIZATION_LEVEL: '-O'
      BASE_CONFIGURATION: Configs/Prod.xcconfig
targets:
  KokoSOS:
    type: application
    platform: iOS
    dependencies:
      - sdk: Contacts.framework
      - sdk: ContactsUI.framework
      - package: Supabase
        product: Supabase
      - package: Firebase
        product: FirebaseMessaging
    configFiles:
      Debug-Dev: Configs/Dev.xcconfig
      Debug-Stage: Configs/Stage.xcconfig
      Debug-Prod: Configs/Prod.xcconfig
      Release-Dev: Configs/Dev.xcconfig
      Release-Stage: Configs/Stage.xcconfig
      Release-Prod: Configs/Prod.xcconfig
    sources:
      - path: Sources
      - path: Resources
        excludes:
          - "**/*.xcassets/**"
          - "Info.plist"
          - "Info-Dev.plist"
          - "Info-Stage.plist"
          - "Info-Prod.plist"
    resources:
      - path: Resources/Assets.xcassets
    scheme:
      testTargets: []
      gatherCoverageData: false
    settings:
      base:
        CODE_SIGN_STYLE: Automatic
        SUPPORTED_PLATFORMS: iphonesimulator iphoneos
        OTHER_LDFLAGS: ""
        PRODUCT_BUNDLE_IDENTIFIER: $(APP_BUNDLE_ID)
      configs:
        Debug-Dev:
          INFOPLIST_FILE: Resources/Info-Dev.plist
        Debug-Stage:
          INFOPLIST_FILE: Resources/Info-Stage.plist
        Debug-Prod:
          INFOPLIST_FILE: Resources/Info-Prod.plist
        Release-Dev:
          INFOPLIST_FILE: Resources/Info-Dev.plist
        Release-Stage:
          INFOPLIST_FILE: Resources/Info-Stage.plist
        Release-Prod:
          INFOPLIST_FILE: Resources/Info-Prod.plist
    info:
      path: Resources/Info.plist
    entitlements:
      path: Resources/KokoSOS.entitlements
    capabilities:
      - pushNotifications: true
      - backgroundModes:
          modes: [remote-notification]
    postBuildScripts:
      - name: Copy GoogleService-Info for Environment
        shell: /bin/sh
        basedOnDependencyAnalysis: false
        showEnvVarsInLog: true
        script: |
          GOOGLE_INFO_DIR="${PROJECT_DIR}/Resources/Firebase"
          DEST="${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/GoogleService-Info.plist"

          case "${CONFIGURATION}" in
            *Dev*)   SRC="${GOOGLE_INFO_DIR}/GoogleService-Info-Dev.plist" ;;
            *Stage*) SRC="${GOOGLE_INFO_DIR}/GoogleService-Info-Dev.plist" ;; # Stage未用意のためDevを流用
            *Prod*)  SRC="${GOOGLE_INFO_DIR}/GoogleService-Info-Prod.plist" ;;
            *) echo "Unknown CONFIGURATION: ${CONFIGURATION}" ; exit 1 ;;
          esac

          if [ ! -f "${SRC}" ]; then
            echo "Missing source plist: ${SRC}"
            exit 1
          fi

          mkdir -p "$(dirname "${DEST}")"
          cp -f "${SRC}" "${DEST}"
          echo "Copied ${SRC} -> ${DEST}"
