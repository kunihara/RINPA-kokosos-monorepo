name: Deploy API (Cloudflare Workers)

on:
  push:
    branches: [dev, stage, main]

jobs:
  deploy:
    name: Deploy Workers
    runs-on: ubuntu-latest
    environment: ${{ github.ref_name == 'main' && 'prod' || github.ref_name == 'stage' && 'stage' || 'dev' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Deploy via Wrangler (dev)
        if: ${{ github.ref_name == 'dev' }}
        uses: cloudflare/wrangler-action@v3
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
          CORS_ALLOW_ORIGIN: ${{ secrets.CORS_ALLOW_ORIGIN }}
          WEB_PUBLIC_BASE: ${{ secrets.WEB_PUBLIC_BASE }}
          EMAIL_PROVIDER: ${{ secrets.EMAIL_PROVIDER }}
          ENV_NAME: dev
        with:
          wranglerVersion: '4.40.3'
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          workingDirectory: apps/api-worker
          preCommands: |
            set -e
            # Sanity: print the account picked up by this runner
            npx wrangler whoami || true
            # First deploy to create the service (script) so that secret put works
            npx wrangler deploy --env "$ENV_NAME"
            # Upload secrets to the created service
            [ -n "${JWT_SECRET:-}" ] && printf "%s" "$JWT_SECRET" | npx wrangler secret put JWT_SECRET --env "$ENV_NAME"
            [ -n "${SUPABASE_URL:-}" ] && printf "%s" "$SUPABASE_URL" | npx wrangler secret put SUPABASE_URL --env "$ENV_NAME"
            [ -n "${SUPABASE_SERVICE_ROLE_KEY:-}" ] && printf "%s" "$SUPABASE_SERVICE_ROLE_KEY" | npx wrangler secret put SUPABASE_SERVICE_ROLE_KEY --env "$ENV_NAME"
            [ -n "${CORS_ALLOW_ORIGIN:-}" ] && printf "%s" "$CORS_ALLOW_ORIGIN" | npx wrangler secret put CORS_ALLOW_ORIGIN --env "$ENV_NAME"
            [ -n "${WEB_PUBLIC_BASE:-}" ] && printf "%s" "$WEB_PUBLIC_BASE" | npx wrangler secret put WEB_PUBLIC_BASE --env "$ENV_NAME"
            [ -n "${EMAIL_PROVIDER:-}" ] && printf "%s" "$EMAIL_PROVIDER" | npx wrangler secret put EMAIL_PROVIDER --env "$ENV_NAME"
          command: deploy --env dev

      - name: Deploy via Wrangler (stage/prod)
        if: ${{ github.ref_name == 'stage' || github.ref_name == 'main' }}
        uses: cloudflare/wrangler-action@v3
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
          CORS_ALLOW_ORIGIN: ${{ secrets.CORS_ALLOW_ORIGIN }}
          WEB_PUBLIC_BASE: ${{ secrets.WEB_PUBLIC_BASE }}
          EMAIL_PROVIDER: ${{ secrets.EMAIL_PROVIDER }}
          SES_REGION: ${{ secrets.SES_REGION }}
          SES_ACCESS_KEY_ID: ${{ secrets.SES_ACCESS_KEY_ID }}
          SES_SECRET_ACCESS_KEY: ${{ secrets.SES_SECRET_ACCESS_KEY }}
          SES_SENDER_EMAIL: ${{ secrets.SES_SENDER_EMAIL }}
          ENV_NAME: ${{ github.ref_name == 'main' && 'prod' || 'stage' }}
        with:
          wranglerVersion: '4.40.3'
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          workingDirectory: apps/api-worker
          preCommands: |
            set -e
            # Sanity: print the account picked up by this runner
            npx wrangler whoami || true
            # First deploy to create the service (script) so that secret put works
            npx wrangler deploy --env "$ENV_NAME"
            # Upload secrets to the created service
            [ -n "${JWT_SECRET:-}" ] && printf "%s" "$JWT_SECRET" | npx wrangler secret put JWT_SECRET --env "$ENV_NAME"
            [ -n "${SUPABASE_URL:-}" ] && printf "%s" "$SUPABASE_URL" | npx wrangler secret put SUPABASE_URL --env "$ENV_NAME"
            [ -n "${SUPABASE_SERVICE_ROLE_KEY:-}" ] && printf "%s" "$SUPABASE_SERVICE_ROLE_KEY" | npx wrangler secret put SUPABASE_SERVICE_ROLE_KEY --env "$ENV_NAME"
            [ -n "${CORS_ALLOW_ORIGIN:-}" ] && printf "%s" "$CORS_ALLOW_ORIGIN" | npx wrangler secret put CORS_ALLOW_ORIGIN --env "$ENV_NAME"
            [ -n "${WEB_PUBLIC_BASE:-}" ] && printf "%s" "$WEB_PUBLIC_BASE" | npx wrangler secret put WEB_PUBLIC_BASE --env "$ENV_NAME"
            [ -n "${EMAIL_PROVIDER:-}" ] && printf "%s" "$EMAIL_PROVIDER" | npx wrangler secret put EMAIL_PROVIDER --env "$ENV_NAME"
            [ -n "${SES_REGION:-}" ] && printf "%s" "$SES_REGION" | npx wrangler secret put SES_REGION --env "$ENV_NAME"
            [ -n "${SES_ACCESS_KEY_ID:-}" ] && printf "%s" "$SES_ACCESS_KEY_ID" | npx wrangler secret put SES_ACCESS_KEY_ID --env "$ENV_NAME"
            [ -n "${SES_SECRET_ACCESS_KEY:-}" ] && printf "%s" "$SES_SECRET_ACCESS_KEY" | npx wrangler secret put SES_SECRET_ACCESS_KEY --env "$ENV_NAME"
            [ -n "${SES_SENDER_EMAIL:-}" ] && printf "%s" "$SES_SENDER_EMAIL" | npx wrangler secret put SES_SENDER_EMAIL --env "$ENV_NAME"
          command: deploy --env ${{ github.ref_name == 'main' && 'prod' || 'stage' }}
