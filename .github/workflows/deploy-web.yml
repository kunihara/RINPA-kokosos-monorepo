name: Deploy Web (Cloudflare Pages)

on:
  push:
    branches: [dev, stage, main]

jobs:
  deploy:
    name: Build & Deploy Pages
    runs-on: ubuntu-latest
    environment: ${{ github.ref_name == 'main' && 'prod' || github.ref_name == 'stage' && 'stage' || 'dev' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install deps
        working-directory: apps/web
        run: npm install --no-fund --no-audit --legacy-peer-deps

      - name: Build (next-on-pages)
        working-directory: apps/web
        run: npx @cloudflare/next-on-pages@latest
        env:
          NEXT_PUBLIC_API_BASE: ${{ secrets.NEXT_PUBLIC_API_BASE }}
          NEXT_PUBLIC_MAPBOX_TOKEN: ${{ secrets.NEXT_PUBLIC_MAPBOX_TOKEN }}

      - name: Ensure Pages project exists
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          workingDirectory: apps/web
          preCommands: ${{ format('npx wrangler pages project list || true; npx wrangler pages project create {0} --production-branch={1} || true', format('kokosos-web-{0}', (github.ref_name == 'main' && 'prod' || github.ref_name == 'stage' && 'stage' || 'dev')), (github.ref_name == 'main' && 'main' || github.ref_name == 'stage' && 'stage' || 'dev')) }}
          command: echo "Ensure done"


      - name: Deploy via Wrangler Pages
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          workingDirectory: apps/web
          command: ${{ format('pages deploy .vercel/output/static --project-name={0} --branch={1} --commit-dirty=true --commit-message={2}', format('kokosos-web-{0}', (github.ref_name == 'main' && 'prod' || github.ref_name == 'stage' && 'stage' || 'dev')), (github.ref_name == 'main' && 'main' || github.ref_name == 'stage' && 'stage' || 'dev'), 'GitHub_Actions_Deploy') }}
